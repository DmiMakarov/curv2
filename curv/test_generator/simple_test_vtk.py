import simple_figures as sf
import numpy as np

def number(numObj, digits=6):
    return f"{numObj:.{digits}f}"   

def write_file(points,triangles, normals, curavture, filename):
    assert filename.find('.vtk')!= -1, 'Unexpected file format'
    file = open(filename,mode ='w')
    text = '# vtk DataFile Version 3.0\n File generated by simple_test_vtk\nASCII\nDATASET UNSTRUCTURED_GRID\n'
    file.write(text)
    file.write('POINTS '+ str(len(points)) + ' double\n')
    for i in range(len(points)):
        file.write(number(points[i,0]) + ' ' + number(points[i,1]) + ' ' + number(points[i,2]) + '\n')
    file.write("CELLS " + str(len(triangles)) + ' ' + str(4*len(triangles)) + '\n' )
    for i in range(len(triangles)):
        file.write('3 ' + str(int(triangles[i,0])) + ' ' + str(int(triangles[i,1])) + ' ' + str(int(triangles[i,2])) + '\n' )
    file.write('CELL_TYPES ' + str(len(triangles)) + '\n')
    for i in range(len(triangles)):
        file.write('5\n')
    text = 'POINT_DATA ' + str(len(points)) + '\n' + 'SCALARS curvature double\nLOOKUP_TABLE default\n'
    file.write(text)
    for i in range(len(points)):
        file.write(number(curavture[i]) + '\n')
    text = "NORMALS normals double\n"
    file.write(text)
    for i in range(len(points)):
        file.write(number(normals[i,0]) + ' ' + number(normals[i,1]) + ' ' + number(normals[i,2]) + '\n')
    file.close()

def make_triangles(num_points,is_closed):
    if (is_closed):
        triangles = np.zeros((num_points,3))
        for i in range(num_points-1):
            triangles[i] = [i,i+1,i+1]
        triangles[-1] = [num_points-1,0,0]
    else:
        triangles = np.zeros((num_points-1,3))
        for i in range(num_points-1):
            triangles[i] = [i,i+1,i+1]
    return triangles

def write_ellipse(num_points = 250, a = 10, b = 10, distrib = 'uniform', filename = 'ellipse.vtk'):
    points, normals, curvature = sf.make_ellipse(num_points, a , b, distrib )
    triangles = make_triangles(len(points), is_closed = True)
    write_file(points,triangles,normals,curvature,filename)


def write_spiral(num_points = 250, k = 1 , max_phi = np.pi, distrib = "uniform",filename = 'spiral.vtk' ):
    points, normals, curvature = sf.make_spiral(num_points, k, max_phi, distrib)
    triangles = make_triangles(len(points), is_closed = False)
    write_file(points,triangles,normals,curvature,filename)

def write_delta(num_points = 250, a = 4, b = 12, max_phi = 2*np.pi, distrib = "uniform", filename = 'delta.vtk'):
    points, normals, curvature = sf.make_delta(num_points, a,b,max_phi, distrib)
    triangles = make_triangles(len(points), is_closed = True)
    write_file(points,triangles,normals,curvature,filename)

def write_loop(num_points = 250, t0 = -3 , t1  = 6, distrib = "uniform",filename = 'loop.vtk' ):
    points, normals, curvature = sf.make_loop(num_points, t0,t1, distrib)
    triangles = make_triangles(len(points), is_closed = False)
    write_file(points,triangles,normals,curvature,filename)

def write_parabola(num_points = 250, t0 = -5 , t1  = 5, distrib = "uniform",filename = 'parabola.vtk' ):
    points, normals, curvature = sf.make_parabola(num_points, t0,t1, distrib)
    triangles = make_triangles(len(points), is_closed = False)
    write_file(points,triangles,normals,curvature,filename)

num_poins = []
for i in range(20):
    num_poins.append(5+5*i)

for i in range(len(num_poins)):
    write_ellipse(num_points= num_poins[i], a = 10, b = 4,filename = "../meshes/ellipses/ellipse_uni_n"+str(num_poins[i])+".vtk" )

    write_ellipse(num_points= num_poins[i], a = 10, b = 4, distrib="gauss", filename = "../meshes/ellipses/ellipse_gauss_n"+str(num_poins[i])+".vtk")

    write_ellipse(num_points= num_poins[i], a = 10, b = 4, distrib="unipert", filename = "../meshes/ellipses/ellipse_unipert_n"+str(num_poins[i])+".vtk")

    write_ellipse(num_points= num_poins[i], filename = "../meshes/circles/circle_uni_n"+str(num_poins[i])+".vtk")

    write_ellipse(num_points= num_poins[i], a=10, b =10, distrib="gauss",filename = "../meshes/circles/circle_gauss_n"+str(num_poins[i])+".vtk")

    write_ellipse(num_points= num_poins[i], a=10, b =10, distrib="unipert",filename = "../meshes/circles/circle_unipert_n"+str(num_poins[i])+".vtk")

    write_spiral(num_points= num_poins[i],k=10,max_phi = np.pi,filename = "../meshes/spirals/spiral_uni_n"+str(num_poins[i])+".vtk")

    write_spiral(num_points= num_poins[i],k=10, max_phi = np.pi, distrib= "gauss",filename = "../meshes/spirals/spiral_gauss_n"+str(num_poins[i])+".vtk")

    write_spiral(num_points= num_poins[i],k=10, max_phi = np.pi, distrib= "unipert",filename = "../meshes/spirals/spiral_unipert_n"+str(num_poins[i])+".vtk")

    write_loop(num_points= num_poins[i],t0 = -1,t1 = 3,filename = "../meshes/loops/loop_uni_n"+str(num_poins[i])+".vtk")

    write_loop(num_points= num_poins[i],t0 = -1,t1 = 3, distrib= "gauss",filename = "../meshes/loops/loop_gauss_n"+str(num_poins[i])+".vtk")

    write_loop(num_points= num_poins[i],t0 = -1, t1 = 3, distrib= "unipert",filename = "../meshes/loops/loop_unipert_n"+str(num_poins[i])+".vtk")

    write_parabola(num_points= num_poins[i],t0 = -5,t1 = 5,filename = "../meshes/parabolas/parabola_uni_n"+str(num_poins[i])+".vtk")

    write_parabola(num_points= num_poins[i],t0 = -5,t1 = 5, distrib= "gauss",filename = "../meshes/parabolas/parabola_gauss_n"+str(num_poins[i])+".vtk")

    write_parabola(num_points= num_poins[i],t0 = -5, t1 = 5, distrib= "unipert",filename = "../meshes/parabolas/parabola_unipert_n"+str(num_poins[i])+".vtk")

    write_delta(num_points= num_poins[i],filename = "../meshes/deltas/delta_uni_n"+str(num_poins[i])+".vtk")

    write_delta(num_points= num_poins[i], distrib= "gauss",filename = "../meshes/deltas/delta_gauss_n"+str(num_poins[i])+".vtk")

    write_delta(num_points= num_poins[i], distrib= "unipert",filename = "../meshes/deltas/delta_unipert_n"+str(num_poins[i])+".vtk")